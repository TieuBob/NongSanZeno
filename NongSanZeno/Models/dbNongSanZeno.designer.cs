#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NongSanZeno.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NongSanZeno")]
	public partial class dbNongSanZenoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbAdmin(tbAdmin instance);
    partial void UpdatetbAdmin(tbAdmin instance);
    partial void DeletetbAdmin(tbAdmin instance);
    partial void InserttbTinhTrangDH(tbTinhTrangDH instance);
    partial void UpdatetbTinhTrangDH(tbTinhTrangDH instance);
    partial void DeletetbTinhTrangDH(tbTinhTrangDH instance);
    partial void InserttbBinhLuan(tbBinhLuan instance);
    partial void UpdatetbBinhLuan(tbBinhLuan instance);
    partial void DeletetbBinhLuan(tbBinhLuan instance);
    partial void InserttbChiTietDonHang(tbChiTietDonHang instance);
    partial void UpdatetbChiTietDonHang(tbChiTietDonHang instance);
    partial void DeletetbChiTietDonHang(tbChiTietDonHang instance);
    partial void InserttbDonHang(tbDonHang instance);
    partial void UpdatetbDonHang(tbDonHang instance);
    partial void DeletetbDonHang(tbDonHang instance);
    partial void InserttbDonViTinh(tbDonViTinh instance);
    partial void UpdatetbDonViTinh(tbDonViTinh instance);
    partial void DeletetbDonViTinh(tbDonViTinh instance);
    partial void InserttbKhachHang(tbKhachHang instance);
    partial void UpdatetbKhachHang(tbKhachHang instance);
    partial void DeletetbKhachHang(tbKhachHang instance);
    partial void InserttbLoaiSanPham(tbLoaiSanPham instance);
    partial void UpdatetbLoaiSanPham(tbLoaiSanPham instance);
    partial void DeletetbLoaiSanPham(tbLoaiSanPham instance);
    partial void InserttbLoHang(tbLoHang instance);
    partial void UpdatetbLoHang(tbLoHang instance);
    partial void DeletetbLoHang(tbLoHang instance);
    partial void InserttbNhaCungCap(tbNhaCungCap instance);
    partial void UpdatetbNhaCungCap(tbNhaCungCap instance);
    partial void DeletetbNhaCungCap(tbNhaCungCap instance);
    partial void InserttbNhom(tbNhom instance);
    partial void UpdatetbNhom(tbNhom instance);
    partial void DeletetbNhom(tbNhom instance);
    partial void InserttbPhanHoiKH(tbPhanHoiKH instance);
    partial void UpdatetbPhanHoiKH(tbPhanHoiKH instance);
    partial void DeletetbPhanHoiKH(tbPhanHoiKH instance);
    partial void InserttbSanPham(tbSanPham instance);
    partial void UpdatetbSanPham(tbSanPham instance);
    partial void DeletetbSanPham(tbSanPham instance);
    #endregion
		
		public dbNongSanZenoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NongSanZenoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbNongSanZenoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbNongSanZenoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbNongSanZenoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbNongSanZenoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbAdmin> tbAdmins
		{
			get
			{
				return this.GetTable<tbAdmin>();
			}
		}
		
		public System.Data.Linq.Table<tbTinhTrangDH> tbTinhTrangDHs
		{
			get
			{
				return this.GetTable<tbTinhTrangDH>();
			}
		}
		
		public System.Data.Linq.Table<tbBinhLuan> tbBinhLuans
		{
			get
			{
				return this.GetTable<tbBinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<tbChiTietDonHang> tbChiTietDonHangs
		{
			get
			{
				return this.GetTable<tbChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<tbDonHang> tbDonHangs
		{
			get
			{
				return this.GetTable<tbDonHang>();
			}
		}
		
		public System.Data.Linq.Table<tbDonViTinh> tbDonViTinhs
		{
			get
			{
				return this.GetTable<tbDonViTinh>();
			}
		}
		
		public System.Data.Linq.Table<tbKhachHang> tbKhachHangs
		{
			get
			{
				return this.GetTable<tbKhachHang>();
			}
		}
		
		public System.Data.Linq.Table<tbLoaiSanPham> tbLoaiSanPhams
		{
			get
			{
				return this.GetTable<tbLoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<tbLoHang> tbLoHangs
		{
			get
			{
				return this.GetTable<tbLoHang>();
			}
		}
		
		public System.Data.Linq.Table<tbNhaCungCap> tbNhaCungCaps
		{
			get
			{
				return this.GetTable<tbNhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<tbNhom> tbNhoms
		{
			get
			{
				return this.GetTable<tbNhom>();
			}
		}
		
		public System.Data.Linq.Table<tbPhanHoiKH> tbPhanHoiKHs
		{
			get
			{
				return this.GetTable<tbPhanHoiKH>();
			}
		}
		
		public System.Data.Linq.Table<tbSanPham> tbSanPhams
		{
			get
			{
				return this.GetTable<tbSanPham>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbAdmin")]
	public partial class tbAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _Hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public tbAdmin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTinhTrangDH")]
	public partial class tbTinhTrangDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTTDH;
		
		private string _TenTTDH;
		
		private EntitySet<tbDonHang> _tbDonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTTDHChanging(int value);
    partial void OnMaTTDHChanged();
    partial void OnTenTTDHChanging(string value);
    partial void OnTenTTDHChanged();
    #endregion
		
		public tbTinhTrangDH()
		{
			this._tbDonHangs = new EntitySet<tbDonHang>(new Action<tbDonHang>(this.attach_tbDonHangs), new Action<tbDonHang>(this.detach_tbDonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTTDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTTDH
		{
			get
			{
				return this._MaTTDH;
			}
			set
			{
				if ((this._MaTTDH != value))
				{
					this.OnMaTTDHChanging(value);
					this.SendPropertyChanging();
					this._MaTTDH = value;
					this.SendPropertyChanged("MaTTDH");
					this.OnMaTTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTTDH", DbType="NVarChar(50)")]
		public string TenTTDH
		{
			get
			{
				return this._TenTTDH;
			}
			set
			{
				if ((this._TenTTDH != value))
				{
					this.OnTenTTDHChanging(value);
					this.SendPropertyChanging();
					this._TenTTDH = value;
					this.SendPropertyChanged("TenTTDH");
					this.OnTenTTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTinhTrangDH_tbDonHang", Storage="_tbDonHangs", ThisKey="MaTTDH", OtherKey="MaTTDH")]
		public EntitySet<tbDonHang> tbDonHangs
		{
			get
			{
				return this._tbDonHangs;
			}
			set
			{
				this._tbDonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDonHangs(tbDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbTinhTrangDH = this;
		}
		
		private void detach_tbDonHangs(tbDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbTinhTrangDH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbBinhLuan")]
	public partial class tbBinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private string _TenKH;
		
		private string _NoiDung;
		
		private System.Nullable<int> _MaDH;
		
		private EntityRef<tbDonHang> _tbDonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnMaDHChanging(System.Nullable<int> value);
    partial void OnMaDHChanged();
    #endregion
		
		public tbBinhLuan()
		{
			this._tbDonHang = default(EntityRef<tbDonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int")]
		public System.Nullable<int> MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._tbDonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDonHang_tbBinhLuan", Storage="_tbDonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public tbDonHang tbDonHang
		{
			get
			{
				return this._tbDonHang.Entity;
			}
			set
			{
				tbDonHang previousValue = this._tbDonHang.Entity;
				if (((previousValue != value) 
							|| (this._tbDonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbDonHang.Entity = null;
						previousValue.tbBinhLuans.Remove(this);
					}
					this._tbDonHang.Entity = value;
					if ((value != null))
					{
						value.tbBinhLuans.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbDonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbChiTietDonHang")]
	public partial class tbChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaSP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<tbDonHang> _tbDonHang;
		
		private EntityRef<tbSanPham> _tbSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public tbChiTietDonHang()
		{
			this._tbDonHang = default(EntityRef<tbDonHang>);
			this._tbSanPham = default(EntityRef<tbSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._tbDonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._tbSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDonHang_tbChiTietDonHang", Storage="_tbDonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public tbDonHang tbDonHang
		{
			get
			{
				return this._tbDonHang.Entity;
			}
			set
			{
				tbDonHang previousValue = this._tbDonHang.Entity;
				if (((previousValue != value) 
							|| (this._tbDonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbDonHang.Entity = null;
						previousValue.tbChiTietDonHangs.Remove(this);
					}
					this._tbDonHang.Entity = value;
					if ((value != null))
					{
						value.tbChiTietDonHangs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(int);
					}
					this.SendPropertyChanged("tbDonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSanPham_tbChiTietDonHang", Storage="_tbSanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public tbSanPham tbSanPham
		{
			get
			{
				return this._tbSanPham.Entity;
			}
			set
			{
				tbSanPham previousValue = this._tbSanPham.Entity;
				if (((previousValue != value) 
							|| (this._tbSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbSanPham.Entity = null;
						previousValue.tbChiTietDonHangs.Remove(this);
					}
					this._tbSanPham.Entity = value;
					if ((value != null))
					{
						value.tbChiTietDonHangs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("tbSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDonHang")]
	public partial class tbDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaKH;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private string _GhiChu;
		
		private System.Nullable<decimal> _TongTien;
		
		private int _MaTTDH;
		
		private EntitySet<tbBinhLuan> _tbBinhLuans;
		
		private EntitySet<tbChiTietDonHang> _tbChiTietDonHangs;
		
		private EntityRef<tbTinhTrangDH> _tbTinhTrangDH;
		
		private EntityRef<tbKhachHang> _tbKhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    partial void OnMaTTDHChanging(int value);
    partial void OnMaTTDHChanged();
    #endregion
		
		public tbDonHang()
		{
			this._tbBinhLuans = new EntitySet<tbBinhLuan>(new Action<tbBinhLuan>(this.attach_tbBinhLuans), new Action<tbBinhLuan>(this.detach_tbBinhLuans));
			this._tbChiTietDonHangs = new EntitySet<tbChiTietDonHang>(new Action<tbChiTietDonHang>(this.attach_tbChiTietDonHangs), new Action<tbChiTietDonHang>(this.detach_tbChiTietDonHangs));
			this._tbTinhTrangDH = default(EntityRef<tbTinhTrangDH>);
			this._tbKhachHang = default(EntityRef<tbKhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._tbKhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTTDH", DbType="Int NOT NULL")]
		public int MaTTDH
		{
			get
			{
				return this._MaTTDH;
			}
			set
			{
				if ((this._MaTTDH != value))
				{
					if (this._tbTinhTrangDH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTTDHChanging(value);
					this.SendPropertyChanging();
					this._MaTTDH = value;
					this.SendPropertyChanged("MaTTDH");
					this.OnMaTTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDonHang_tbBinhLuan", Storage="_tbBinhLuans", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<tbBinhLuan> tbBinhLuans
		{
			get
			{
				return this._tbBinhLuans;
			}
			set
			{
				this._tbBinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDonHang_tbChiTietDonHang", Storage="_tbChiTietDonHangs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<tbChiTietDonHang> tbChiTietDonHangs
		{
			get
			{
				return this._tbChiTietDonHangs;
			}
			set
			{
				this._tbChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTinhTrangDH_tbDonHang", Storage="_tbTinhTrangDH", ThisKey="MaTTDH", OtherKey="MaTTDH", IsForeignKey=true)]
		public tbTinhTrangDH tbTinhTrangDH
		{
			get
			{
				return this._tbTinhTrangDH.Entity;
			}
			set
			{
				tbTinhTrangDH previousValue = this._tbTinhTrangDH.Entity;
				if (((previousValue != value) 
							|| (this._tbTinhTrangDH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbTinhTrangDH.Entity = null;
						previousValue.tbDonHangs.Remove(this);
					}
					this._tbTinhTrangDH.Entity = value;
					if ((value != null))
					{
						value.tbDonHangs.Add(this);
						this._MaTTDH = value.MaTTDH;
					}
					else
					{
						this._MaTTDH = default(int);
					}
					this.SendPropertyChanged("tbTinhTrangDH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbKhachHang_tbDonHang", Storage="_tbKhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public tbKhachHang tbKhachHang
		{
			get
			{
				return this._tbKhachHang.Entity;
			}
			set
			{
				tbKhachHang previousValue = this._tbKhachHang.Entity;
				if (((previousValue != value) 
							|| (this._tbKhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbKhachHang.Entity = null;
						previousValue.tbDonHangs.Remove(this);
					}
					this._tbKhachHang.Entity = value;
					if ((value != null))
					{
						value.tbDonHangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("tbKhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbBinhLuans(tbBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.tbDonHang = this;
		}
		
		private void detach_tbBinhLuans(tbBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.tbDonHang = null;
		}
		
		private void attach_tbChiTietDonHangs(tbChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbDonHang = this;
		}
		
		private void detach_tbChiTietDonHangs(tbChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbDonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDonViTinh")]
	public partial class tbDonViTinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDVT;
		
		private string _TenDVT;
		
		private EntitySet<tbSanPham> _tbSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVTChanging(int value);
    partial void OnMaDVTChanged();
    partial void OnTenDVTChanging(string value);
    partial void OnTenDVTChanged();
    #endregion
		
		public tbDonViTinh()
		{
			this._tbSanPhams = new EntitySet<tbSanPham>(new Action<tbSanPham>(this.attach_tbSanPhams), new Action<tbSanPham>(this.detach_tbSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDVT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDVT
		{
			get
			{
				return this._MaDVT;
			}
			set
			{
				if ((this._MaDVT != value))
				{
					this.OnMaDVTChanging(value);
					this.SendPropertyChanging();
					this._MaDVT = value;
					this.SendPropertyChanged("MaDVT");
					this.OnMaDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDVT", DbType="NVarChar(50)")]
		public string TenDVT
		{
			get
			{
				return this._TenDVT;
			}
			set
			{
				if ((this._TenDVT != value))
				{
					this.OnTenDVTChanging(value);
					this.SendPropertyChanging();
					this._TenDVT = value;
					this.SendPropertyChanged("TenDVT");
					this.OnTenDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDonViTinh_tbSanPham", Storage="_tbSanPhams", ThisKey="MaDVT", OtherKey="MaDVT")]
		public EntitySet<tbSanPham> tbSanPhams
		{
			get
			{
				return this._tbSanPhams;
			}
			set
			{
				this._tbSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSanPhams(tbSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbDonViTinh = this;
		}
		
		private void detach_tbSanPhams(tbSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbDonViTinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbKhachHang")]
	public partial class tbKhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _TenKH;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _DiaChiKH;
		
		private string _DienThoaiKH;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _Avatar;
		
		private EntitySet<tbDonHang> _tbDonHangs;
		
		private EntitySet<tbPhanHoiKH> _tbPhanHoiKHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnDienThoaiKHChanging(string value);
    partial void OnDienThoaiKHChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    #endregion
		
		public tbKhachHang()
		{
			this._tbDonHangs = new EntitySet<tbDonHang>(new Action<tbDonHang>(this.attach_tbDonHangs), new Action<tbDonHang>(this.detach_tbDonHangs));
			this._tbPhanHoiKHs = new EntitySet<tbPhanHoiKH>(new Action<tbPhanHoiKH>(this.attach_tbPhanHoiKHs), new Action<tbPhanHoiKH>(this.detach_tbPhanHoiKHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(200)")]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiKH", DbType="VarChar(50)")]
		public string DienThoaiKH
		{
			get
			{
				return this._DienThoaiKH;
			}
			set
			{
				if ((this._DienThoaiKH != value))
				{
					this.OnDienThoaiKHChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiKH = value;
					this.SendPropertyChanged("DienThoaiKH");
					this.OnDienThoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarChar(100)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbKhachHang_tbDonHang", Storage="_tbDonHangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<tbDonHang> tbDonHangs
		{
			get
			{
				return this._tbDonHangs;
			}
			set
			{
				this._tbDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbKhachHang_tbPhanHoiKH", Storage="_tbPhanHoiKHs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<tbPhanHoiKH> tbPhanHoiKHs
		{
			get
			{
				return this._tbPhanHoiKHs;
			}
			set
			{
				this._tbPhanHoiKHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDonHangs(tbDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbKhachHang = this;
		}
		
		private void detach_tbDonHangs(tbDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbKhachHang = null;
		}
		
		private void attach_tbPhanHoiKHs(tbPhanHoiKH entity)
		{
			this.SendPropertyChanging();
			entity.tbKhachHang = this;
		}
		
		private void detach_tbPhanHoiKHs(tbPhanHoiKH entity)
		{
			this.SendPropertyChanging();
			entity.tbKhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbLoaiSanPham")]
	public partial class tbLoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private EntitySet<tbSanPham> _tbSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(int value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    #endregion
		
		public tbLoaiSanPham()
		{
			this._tbSanPhams = new EntitySet<tbSanPham>(new Action<tbSanPham>(this.attach_tbSanPhams), new Action<tbSanPham>(this.detach_tbSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(50)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbLoaiSanPham_tbSanPham", Storage="_tbSanPhams", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<tbSanPham> tbSanPhams
		{
			get
			{
				return this._tbSanPhams;
			}
			set
			{
				this._tbSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSanPhams(tbSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbLoaiSanPham = this;
		}
		
		private void detach_tbSanPhams(tbSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbLoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbLoHang")]
	public partial class tbLoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoHang;
		
		private System.Nullable<int> _MaNCC;
		
		private System.Nullable<int> _MaSP;
		
		private System.Nullable<int> _SLNhap;
		
		private System.Nullable<int> _SLDaBan;
		
		private System.Nullable<int> _SLHienTai;
		
		private EntityRef<tbNhaCungCap> _tbNhaCungCap;
		
		private EntityRef<tbSanPham> _tbSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoHangChanging(int value);
    partial void OnMaLoHangChanged();
    partial void OnMaNCCChanging(System.Nullable<int> value);
    partial void OnMaNCCChanged();
    partial void OnMaSPChanging(System.Nullable<int> value);
    partial void OnMaSPChanged();
    partial void OnSLNhapChanging(System.Nullable<int> value);
    partial void OnSLNhapChanged();
    partial void OnSLDaBanChanging(System.Nullable<int> value);
    partial void OnSLDaBanChanged();
    partial void OnSLHienTaiChanging(System.Nullable<int> value);
    partial void OnSLHienTaiChanged();
    #endregion
		
		public tbLoHang()
		{
			this._tbNhaCungCap = default(EntityRef<tbNhaCungCap>);
			this._tbSanPham = default(EntityRef<tbSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoHang
		{
			get
			{
				return this._MaLoHang;
			}
			set
			{
				if ((this._MaLoHang != value))
				{
					this.OnMaLoHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoHang = value;
					this.SendPropertyChanged("MaLoHang");
					this.OnMaLoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Int")]
		public System.Nullable<int> MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._tbNhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int")]
		public System.Nullable<int> MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._tbSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLNhap", DbType="Int")]
		public System.Nullable<int> SLNhap
		{
			get
			{
				return this._SLNhap;
			}
			set
			{
				if ((this._SLNhap != value))
				{
					this.OnSLNhapChanging(value);
					this.SendPropertyChanging();
					this._SLNhap = value;
					this.SendPropertyChanged("SLNhap");
					this.OnSLNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLDaBan", DbType="Int")]
		public System.Nullable<int> SLDaBan
		{
			get
			{
				return this._SLDaBan;
			}
			set
			{
				if ((this._SLDaBan != value))
				{
					this.OnSLDaBanChanging(value);
					this.SendPropertyChanging();
					this._SLDaBan = value;
					this.SendPropertyChanged("SLDaBan");
					this.OnSLDaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLHienTai", DbType="Int")]
		public System.Nullable<int> SLHienTai
		{
			get
			{
				return this._SLHienTai;
			}
			set
			{
				if ((this._SLHienTai != value))
				{
					this.OnSLHienTaiChanging(value);
					this.SendPropertyChanging();
					this._SLHienTai = value;
					this.SendPropertyChanged("SLHienTai");
					this.OnSLHienTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbNhaCungCap_tbLoHang", Storage="_tbNhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public tbNhaCungCap tbNhaCungCap
		{
			get
			{
				return this._tbNhaCungCap.Entity;
			}
			set
			{
				tbNhaCungCap previousValue = this._tbNhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._tbNhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbNhaCungCap.Entity = null;
						previousValue.tbLoHangs.Remove(this);
					}
					this._tbNhaCungCap.Entity = value;
					if ((value != null))
					{
						value.tbLoHangs.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbNhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSanPham_tbLoHang", Storage="_tbSanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public tbSanPham tbSanPham
		{
			get
			{
				return this._tbSanPham.Entity;
			}
			set
			{
				tbSanPham previousValue = this._tbSanPham.Entity;
				if (((previousValue != value) 
							|| (this._tbSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbSanPham.Entity = null;
						previousValue.tbLoHangs.Remove(this);
					}
					this._tbSanPham.Entity = value;
					if ((value != null))
					{
						value.tbLoHangs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbNhaCungCap")]
	public partial class tbNhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private EntitySet<tbLoHang> _tbLoHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(int value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public tbNhaCungCap()
		{
			this._tbLoHangs = new EntitySet<tbLoHang>(new Action<tbLoHang>(this.attach_tbLoHangs), new Action<tbLoHang>(this.detach_tbLoHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbNhaCungCap_tbLoHang", Storage="_tbLoHangs", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<tbLoHang> tbLoHangs
		{
			get
			{
				return this._tbLoHangs;
			}
			set
			{
				this._tbLoHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbLoHangs(tbLoHang entity)
		{
			this.SendPropertyChanging();
			entity.tbNhaCungCap = this;
		}
		
		private void detach_tbLoHangs(tbLoHang entity)
		{
			this.SendPropertyChanging();
			entity.tbNhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbNhom")]
	public partial class tbNhom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhom;
		
		private string _TenNhom;
		
		private EntitySet<tbSanPham> _tbSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(int value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    #endregion
		
		public tbNhom()
		{
			this._tbSanPhams = new EntitySet<tbSanPham>(new Action<tbSanPham>(this.attach_tbSanPhams), new Action<tbSanPham>(this.detach_tbSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(50)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbNhom_tbSanPham", Storage="_tbSanPhams", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<tbSanPham> tbSanPhams
		{
			get
			{
				return this._tbSanPhams;
			}
			set
			{
				this._tbSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSanPhams(tbSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbNhom = this;
		}
		
		private void detach_tbSanPhams(tbSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbNhom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPhanHoiKH")]
	public partial class tbPhanHoiKH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private int _MaKH;
		
		private string _Email;
		
		private string _LyDo;
		
		private EntityRef<tbKhachHang> _tbKhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLyDoChanging(string value);
    partial void OnLyDoChanged();
    #endregion
		
		public tbPhanHoiKH()
		{
			this._tbKhachHang = default(EntityRef<tbKhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._tbKhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LyDo
		{
			get
			{
				return this._LyDo;
			}
			set
			{
				if ((this._LyDo != value))
				{
					this.OnLyDoChanging(value);
					this.SendPropertyChanging();
					this._LyDo = value;
					this.SendPropertyChanged("LyDo");
					this.OnLyDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbKhachHang_tbPhanHoiKH", Storage="_tbKhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public tbKhachHang tbKhachHang
		{
			get
			{
				return this._tbKhachHang.Entity;
			}
			set
			{
				tbKhachHang previousValue = this._tbKhachHang.Entity;
				if (((previousValue != value) 
							|| (this._tbKhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbKhachHang.Entity = null;
						previousValue.tbPhanHoiKHs.Remove(this);
					}
					this._tbKhachHang.Entity = value;
					if ((value != null))
					{
						value.tbPhanHoiKHs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("tbKhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSanPham")]
	public partial class tbSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _TenSP;
		
		private System.Nullable<decimal> _GiaBan;
		
		private string _MoTa;
		
		private string _AnhSP;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _MaNhom;
		
		private System.Nullable<int> _MaLoaiSP;
		
		private System.Nullable<int> _MaDVT;
		
		private EntitySet<tbChiTietDonHang> _tbChiTietDonHangs;
		
		private EntitySet<tbLoHang> _tbLoHangs;
		
		private EntityRef<tbDonViTinh> _tbDonViTinh;
		
		private EntityRef<tbLoaiSanPham> _tbLoaiSanPham;
		
		private EntityRef<tbNhom> _tbNhom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhSPChanging(string value);
    partial void OnAnhSPChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnMaNhomChanging(System.Nullable<int> value);
    partial void OnMaNhomChanged();
    partial void OnMaLoaiSPChanging(System.Nullable<int> value);
    partial void OnMaLoaiSPChanged();
    partial void OnMaDVTChanging(System.Nullable<int> value);
    partial void OnMaDVTChanged();
    #endregion
		
		public tbSanPham()
		{
			this._tbChiTietDonHangs = new EntitySet<tbChiTietDonHang>(new Action<tbChiTietDonHang>(this.attach_tbChiTietDonHangs), new Action<tbChiTietDonHang>(this.detach_tbChiTietDonHangs));
			this._tbLoHangs = new EntitySet<tbLoHang>(new Action<tbLoHang>(this.attach_tbLoHangs), new Action<tbLoHang>(this.detach_tbLoHangs));
			this._tbDonViTinh = default(EntityRef<tbDonViTinh>);
			this._tbLoaiSanPham = default(EntityRef<tbLoaiSanPham>);
			this._tbNhom = default(EntityRef<tbNhom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSP", DbType="VarChar(50)")]
		public string AnhSP
		{
			get
			{
				return this._AnhSP;
			}
			set
			{
				if ((this._AnhSP != value))
				{
					this.OnAnhSPChanging(value);
					this.SendPropertyChanging();
					this._AnhSP = value;
					this.SendPropertyChanged("AnhSP");
					this.OnAnhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Int")]
		public System.Nullable<int> MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._tbNhom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Int")]
		public System.Nullable<int> MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._tbLoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDVT", DbType="Int")]
		public System.Nullable<int> MaDVT
		{
			get
			{
				return this._MaDVT;
			}
			set
			{
				if ((this._MaDVT != value))
				{
					if (this._tbDonViTinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVTChanging(value);
					this.SendPropertyChanging();
					this._MaDVT = value;
					this.SendPropertyChanged("MaDVT");
					this.OnMaDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSanPham_tbChiTietDonHang", Storage="_tbChiTietDonHangs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<tbChiTietDonHang> tbChiTietDonHangs
		{
			get
			{
				return this._tbChiTietDonHangs;
			}
			set
			{
				this._tbChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSanPham_tbLoHang", Storage="_tbLoHangs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<tbLoHang> tbLoHangs
		{
			get
			{
				return this._tbLoHangs;
			}
			set
			{
				this._tbLoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDonViTinh_tbSanPham", Storage="_tbDonViTinh", ThisKey="MaDVT", OtherKey="MaDVT", IsForeignKey=true)]
		public tbDonViTinh tbDonViTinh
		{
			get
			{
				return this._tbDonViTinh.Entity;
			}
			set
			{
				tbDonViTinh previousValue = this._tbDonViTinh.Entity;
				if (((previousValue != value) 
							|| (this._tbDonViTinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbDonViTinh.Entity = null;
						previousValue.tbSanPhams.Remove(this);
					}
					this._tbDonViTinh.Entity = value;
					if ((value != null))
					{
						value.tbSanPhams.Add(this);
						this._MaDVT = value.MaDVT;
					}
					else
					{
						this._MaDVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbDonViTinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbLoaiSanPham_tbSanPham", Storage="_tbLoaiSanPham", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public tbLoaiSanPham tbLoaiSanPham
		{
			get
			{
				return this._tbLoaiSanPham.Entity;
			}
			set
			{
				tbLoaiSanPham previousValue = this._tbLoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._tbLoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbLoaiSanPham.Entity = null;
						previousValue.tbSanPhams.Remove(this);
					}
					this._tbLoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.tbSanPhams.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbLoaiSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbNhom_tbSanPham", Storage="_tbNhom", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public tbNhom tbNhom
		{
			get
			{
				return this._tbNhom.Entity;
			}
			set
			{
				tbNhom previousValue = this._tbNhom.Entity;
				if (((previousValue != value) 
							|| (this._tbNhom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbNhom.Entity = null;
						previousValue.tbSanPhams.Remove(this);
					}
					this._tbNhom.Entity = value;
					if ((value != null))
					{
						value.tbSanPhams.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbNhom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbChiTietDonHangs(tbChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbSanPham = this;
		}
		
		private void detach_tbChiTietDonHangs(tbChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.tbSanPham = null;
		}
		
		private void attach_tbLoHangs(tbLoHang entity)
		{
			this.SendPropertyChanging();
			entity.tbSanPham = this;
		}
		
		private void detach_tbLoHangs(tbLoHang entity)
		{
			this.SendPropertyChanging();
			entity.tbSanPham = null;
		}
	}
}
#pragma warning restore 1591
